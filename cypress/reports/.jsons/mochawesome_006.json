{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2024-12-02T19:54:15.554Z",
    "end": "2024-12-02T19:54:34.530Z",
    "duration": 18976,
    "testsRegistered": 6,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "596aae5b-dc63-460b-bb87-eb2c7f831395",
      "title": "",
      "fullFile": "cypress\\e2e\\random_joke.cy.js",
      "file": "cypress\\e2e\\random_joke.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
          "title": "Endpoint /random_joke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar uma piada válida",
              "fullTitle": "Endpoint /random_joke Deve retornar uma piada válida",
              "timedOut": null,
              "duration": 1206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  status,\n  body\n}) => {\n  expect(status).to.eq(200);\n  expect(body).to.have.all.keys('type', 'setup', 'punchline', 'id');\n  expect(body.type).to.be.a('string');\n  expect(body.setup).to.be.a('string');\n  expect(body.punchline).to.be.a('string');\n  expect(body.id).to.be.a('number');\n});",
              "err": {},
              "uuid": "017430b9-a2d7-478b-af3f-99c297f21ed9",
              "parentUUID": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Simula 10 requisições simultâneas",
              "fullTitle": "Endpoint /random_joke Simula 10 requisições simultâneas",
              "timedOut": null,
              "duration": 9622,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const requests = Cypress._.times(10, () => cy.api('/random_joke'));\ncy.wrap(Promise.all(requests)).then(responses => {\n  responses.forEach(({\n    status\n  }) => expect(status).to.eq(200));\n});",
              "err": {
                "message": "TypeError: Cannot destructure property 'status' of 'undefined' as it is undefined.",
                "estack": "TypeError: Cannot destructure property 'status' of 'undefined' as it is undefined.\n    at eval (webpack://qa-challenge/./cypress/e2e/random_joke.cy.js:17:27)\n    at Array.forEach (<anonymous>)\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/random_joke.cy.js:17:16)",
                "diff": null
              },
              "uuid": "91409d56-eaba-48d5-9cfc-075bdc1e5275",
              "parentUUID": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida os tipos de dados de uma única piada",
              "fullTitle": "Endpoint /random_joke Valida os tipos de dados de uma única piada",
              "timedOut": null,
              "duration": 1121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  body\n}) => {\n  expect(body.id).to.be.a('number');\n  expect(body.type).to.match(/^(general|programming|knock-knock)$/);\n  expect(body.setup).to.be.a('string').and.not.be.empty;\n  expect(body.punchline).to.be.a('string').and.not.be.empty;\n});",
              "err": {},
              "uuid": "da51a798-7c1d-46df-afbd-d20246b3e82c",
              "parentUUID": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Garante que nenhuma piada tem campos vazios",
              "fullTitle": "Endpoint /random_joke Garante que nenhuma piada tem campos vazios",
              "timedOut": null,
              "duration": 1122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  body\n}) => {\n  expect(body.setup.trim()).to.not.be.empty;\n  expect(body.punchline.trim()).to.not.be.empty;\n});",
              "err": {},
              "uuid": "5e479671-81e2-42da-b667-0e129df1de55",
              "parentUUID": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se retorna dados consistentes",
              "fullTitle": "Endpoint /random_joke Verifica se retorna dados consistentes",
              "timedOut": null,
              "duration": 2555,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  body: joke1\n}) => {\n  cy.api('/jokes/random').then(({\n    body: joke2\n  }) => {\n    expect(joke1).to.deep.equal(joke2);\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (type, setup, ...) } to deeply equal { Object (type, setup, ...) }",
                "estack": "AssertionError: expected { Object (type, setup, ...) } to deeply equal { Object (type, setup, ...) }\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/random_joke.cy.js:43:30)",
                "diff": " { type: 'general',\n-   setup: 'Where did you learn to make ice cream?',\n-   punchline: 'Sunday school.',\n-   id: 283 }\n+   setup: 'What\\'s the worst thing about ancient history class?',\n+   punchline: 'The teachers tend to Babylon.',\n+   id: 274 }\n"
              },
              "uuid": "99fccc54-58de-48a4-a5d3-dd4d3278aa41",
              "parentUUID": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a distribuição dos tipos de piada",
              "fullTitle": "Endpoint /random_joke Verifica a distribuição dos tipos de piada",
              "timedOut": null,
              "duration": 2605,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const counts = {\n  general: 0,\n  programming: 0,\n  'knock-knock': 0\n};\nCypress._.times(100, () => {\n  cy.api('/random_joke').then(({\n    body\n  }) => {\n    counts[body.type] += 1;\n  });\n}).then(() => {\n  cy.log('Distribuição:', counts);\n  expect(Object.values(counts)).to.satisfy(arr => arr.some(count => count > 0));\n});",
              "err": {
                "message": "TypeError: Cypress._.times(...).then is not a function",
                "estack": "TypeError: Cypress._.times(...).then is not a function\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/random_joke.cy.js:56:7)",
                "diff": null
              },
              "uuid": "0df76333-9220-49c1-a815-6f5192b1cb90",
              "parentUUID": "d59676eb-aff3-41cf-a2c1-ce31571c6949",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "017430b9-a2d7-478b-af3f-99c297f21ed9",
            "da51a798-7c1d-46df-afbd-d20246b3e82c",
            "5e479671-81e2-42da-b667-0e129df1de55"
          ],
          "failures": [
            "91409d56-eaba-48d5-9cfc-075bdc1e5275",
            "99fccc54-58de-48a4-a5d3-dd4d3278aa41",
            "0df76333-9220-49c1-a815-6f5192b1cb90"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "charts": true,
        "reportPageTitle": "Relatório de Testes",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}