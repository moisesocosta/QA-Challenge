{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2024-12-03T12:30:36.458Z",
    "end": "2024-12-03T12:33:58.050Z",
    "duration": 201592,
    "testsRegistered": 6,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d0e54686-77a9-4831-84fd-b994071d4133",
      "title": "",
      "fullFile": "cypress\\e2e\\random_joke.cy.js",
      "file": "cypress\\e2e\\random_joke.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
          "title": "Endpoint /random_joke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar uma piada válida",
              "fullTitle": "Endpoint /random_joke Deve retornar uma piada válida",
              "timedOut": null,
              "duration": 1525,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  status,\n  body\n}) => {\n  expect(status).to.eq(200);\n  expect(body).to.have.all.keys('type', 'setup', 'punchline', 'id');\n  expect(body.type).to.be.a('string');\n  expect(body.setup).to.be.a('string');\n  expect(body.punchline).to.be.a('string');\n  expect(body.id).to.be.a('number');\n});",
              "err": {},
              "uuid": "4f243cc9-ade1-49ed-9af7-f6f49a90a699",
              "parentUUID": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Simula 10 requisições simultâneas",
              "fullTitle": "Endpoint /random_joke Simula 10 requisições simultâneas",
              "timedOut": null,
              "duration": 9259,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requests = Cypress._.times(10, () => cy.api('/random_joke'));\ncy.wrap(Promise.all(requests)).then(responses => {\n  // Verifica se todas as respostas não são nulas\n  responses.forEach((response, index) => {\n    expect(response, `Requisição ${index + 1} falhou`).to.not.be.null;\n    if (response) {\n      const {\n        status\n      } = response;\n      expect(status).to.eq(200);\n    }\n  });\n});",
              "err": {},
              "uuid": "27f25e14-533b-4095-8430-e9fcb6dc3d0a",
              "parentUUID": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida os tipos de dados de uma única piada",
              "fullTitle": "Endpoint /random_joke Valida os tipos de dados de uma única piada",
              "timedOut": null,
              "duration": 1093,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  body\n}) => {\n  expect(body.id).to.be.a('number');\n  expect(body.type).to.match(/^(general|programming|knock-knock)$/);\n  expect(body.setup).to.be.a('string').and.not.be.empty;\n  expect(body.punchline).to.be.a('string').and.not.be.empty;\n});",
              "err": {},
              "uuid": "983d5585-7931-4351-a9b6-01b8e727456b",
              "parentUUID": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Garante que nenhuma piada tem campos vazios",
              "fullTitle": "Endpoint /random_joke Garante que nenhuma piada tem campos vazios",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  body\n}) => {\n  expect(body.setup.trim()).to.not.be.empty;\n  expect(body.punchline.trim()).to.not.be.empty;\n});",
              "err": {},
              "uuid": "490e693c-f8fd-4864-9fa7-22f3540d867b",
              "parentUUID": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se retorna dados consistentes",
              "fullTitle": "Endpoint /random_joke Verifica se retorna dados consistentes",
              "timedOut": null,
              "duration": 3847,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.api('/random_joke').then(({\n  body: joke1\n}) => {\n  cy.api('/jokes/random').then(({\n    body: joke2\n  }) => {\n    expect(joke1).to.deep.equal(joke2);\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (type, setup, ...) } to deeply equal { Object (type, setup, ...) }",
                "estack": "AssertionError: expected { Object (type, setup, ...) } to deeply equal { Object (type, setup, ...) }\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/random_joke.cy.js:50:30)",
                "diff": " { type: 'general',\n-   setup: 'What\\'s the worst thing about ancient history class?',\n-   punchline: 'The teachers tend to Babylon.',\n-   id: 274 }\n+   setup: 'When do doctors get angry?',\n+   punchline: 'When they run out of patients.',\n+   id: 280 }\n"
              },
              "uuid": "5be1dec5-fb43-44b8-bac2-98a14c9f33eb",
              "parentUUID": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a distribuição dos tipos de piada",
              "fullTitle": "Endpoint /random_joke Verifica a distribuição dos tipos de piada",
              "timedOut": null,
              "duration": 182036,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const counts = {\n  general: 0,\n  programming: 0,\n  'knock-knock': 0\n};\nCypress._.times(100, i => {\n  cy.wait(50 * i);\n  cy.api('/random_joke').then(({\n    body\n  }) => {\n    counts[body.type] += 1;\n  });\n});\ncy.wrap(null).then(() => {\n  cy.log('Distribuição:', counts);\n  expect(Object.values(counts)).to.satisfy(arr => arr.some(count => count > 0));\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://official-joke-api.appspot.com/random_joke\n\nThe response we received from your web server was:\n\n  > 429: Too Many Requests\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://official-joke-api.appspot.com/random_joke\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.16.0 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 429 - Too Many Requests\nHeaders: {\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"77-aAb2FX9EVqookk/4XxYrI4tJfKQ\\\"\",\n  \"x-cloud-trace-context\": \"f723af0e84c1bd54425c40ec0e75c6f6\",\n  \"date\": \"Tue, 03 Dec 2024 12:33:54 GMT\",\n  \"server\": \"Google Frontend\",\n  \"content-length\": \"119\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\"\n}\nBody: {\n  \"type\": \"error\",\n  \"message\": \"Your ip has exceeded the 100 request limit per 15 minute(s). Try again in in 15 minute(s).\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://official-joke-api.appspot.com/random_joke\n\nThe response we received from your web server was:\n\n  > 429: Too Many Requests\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://official-joke-api.appspot.com/random_joke\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.16.0 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 429 - Too Many Requests\nHeaders: {\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"x-powered-by\": \"Express\",\n  \"etag\": \"W/\\\"77-aAb2FX9EVqookk/4XxYrI4tJfKQ\\\"\",\n  \"x-cloud-trace-context\": \"f723af0e84c1bd54425c40ec0e75c6f6\",\n  \"date\": \"Tue, 03 Dec 2024 12:33:54 GMT\",\n  \"server\": \"Google Frontend\",\n  \"content-length\": \"119\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\"\n}\nBody: {\n  \"type\": \"error\",\n  \"message\": \"Your ip has exceeded the 100 request limit per 15 minute(s). Try again in in 15 minute(s).\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:132746:72)\n    at tryCatcher (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:1724:18)\n    at _drainQueueStep (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:2430:12)\n    at _drainQueue (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://official-joke-api.appspot.com/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.ee (webpack://qa-challenge/./node_modules/cypress-plugin-api/dist/support.js:14:2002)",
                "diff": null
              },
              "uuid": "7b1351d6-28e1-475e-be1d-921158401267",
              "parentUUID": "4c42ce02-a20c-4d8e-8cc5-821a68def0e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f243cc9-ade1-49ed-9af7-f6f49a90a699",
            "27f25e14-533b-4095-8430-e9fcb6dc3d0a",
            "983d5585-7931-4351-a9b6-01b8e727456b",
            "490e693c-f8fd-4864-9fa7-22f3540d867b"
          ],
          "failures": [
            "5be1dec5-fb43-44b8-bac2-98a14c9f33eb",
            "7b1351d6-28e1-475e-be1d-921158401267"
          ],
          "pending": [],
          "skipped": [],
          "duration": 198068,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "charts": true,
        "reportPageTitle": "Relatório de Testes",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}