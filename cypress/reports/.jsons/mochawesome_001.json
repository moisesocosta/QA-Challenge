{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-03T12:27:23.647Z",
    "end": "2024-12-03T12:27:36.368Z",
    "duration": 12721,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "88c12ecc-1ebe-4936-b957-7718e74e1480",
      "title": "",
      "fullFile": "cypress\\e2e\\jokes_ten.cy.js",
      "file": "cypress\\e2e\\jokes_ten.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d7cab92-5a4e-4971-8f05-2fc4f8cde0dd",
          "title": "Endpoint /jokes/ten",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar exatamente 10 piadas",
              "fullTitle": "Endpoint /jokes/ten Deve retornar exatamente 10 piadas",
              "timedOut": null,
              "duration": 2002,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/jokes/ten').then(({\n  status,\n  body\n}) => {\n  expect(status).to.eq(200);\n  expect(body).to.be.an('array').with.length(10);\n  body.forEach(joke => {\n    expect(joke).to.have.all.keys('type', 'setup', 'punchline', 'id');\n    expect(joke.type).to.be.a('string');\n    expect(joke.setup).to.be.a('string');\n    expect(joke.punchline).to.be.a('string');\n    expect(joke.id).to.be.a('number');\n  });\n});",
              "err": {},
              "uuid": "a8a376c6-9898-4e96-b5db-7bd9313e8cea",
              "parentUUID": "1d7cab92-5a4e-4971-8f05-2fc4f8cde0dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Simula 10 requisições simultâneas",
              "fullTitle": "Endpoint /jokes/ten Simula 10 requisições simultâneas",
              "timedOut": null,
              "duration": 8652,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requests = Cypress._.times(10, () => cy.api('/jokes/ten'));\ncy.wrap(Promise.all(requests)).then(responses => {\n  // Verifica se todas as respostas não são nulas\n  responses.forEach((response, index) => {\n    expect(response, `Requisição ${index + 1} falhou`).to.not.be.null;\n    if (response) {\n      const {\n        status\n      } = response;\n      expect(status).to.eq(200);\n    }\n  });\n});",
              "err": {},
              "uuid": "162ad150-5d0b-4517-bef2-d36691cc91d6",
              "parentUUID": "1d7cab92-5a4e-4971-8f05-2fc4f8cde0dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida os tipos de dados em todas as piadas da lista",
              "fullTitle": "Endpoint /jokes/ten Valida os tipos de dados em todas as piadas da lista",
              "timedOut": null,
              "duration": 1453,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api('/jokes/ten').then(({\n  body\n}) => {\n  body.forEach(joke => {\n    expect(joke.id).to.be.a('number');\n    expect(joke.type).to.match(/^(general|programming|knock-knock)$/);\n    expect(joke.setup).to.be.a('string').and.not.be.empty;\n    expect(joke.punchline).to.be.a('string').and.not.be.empty;\n  });\n});",
              "err": {},
              "uuid": "8ba0b833-b292-494f-8224-c8077a097f8b",
              "parentUUID": "1d7cab92-5a4e-4971-8f05-2fc4f8cde0dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8a376c6-9898-4e96-b5db-7bd9313e8cea",
            "162ad150-5d0b-4517-bef2-d36691cc91d6",
            "8ba0b833-b292-494f-8224-c8077a097f8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12107,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "charts": true,
        "reportPageTitle": "Relatório de Testes",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}